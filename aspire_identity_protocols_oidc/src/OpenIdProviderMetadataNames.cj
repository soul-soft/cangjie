package aspire_identity_protocols_oidc

public class OpenIdProviderMetadataNames {
    public static let AcrValuesSupported = "acr_values_supported"

    public static let AuthorizationEndpoint = "authorization_endpoint"

    public static let CheckSessionIframe = "check_session_iframe"

    public static let ClaimsLocalesSupported = "claims_locales_supported"

    public static let ClaimsParameterSupported = "claims_parameter_supported"

    public static let ClaimsSupported = "claims_supported"

    public static let ClaimTypesSupported = "claim_types_supported"

    public static let Discovery = ".well-known/openid-configuration"

    public static let DisplayValuesSupported = "display_values_supported"

    public static let EndSessionEndpoint = "end_session_endpoint"

    public static let RevocationEndpoint = "revocation_endpoint"

    public static let FrontchannelLogoutSessionSupported = "frontchannel_logout_session_supported"

    public static let FrontchannelLogoutSupported = "frontchannel_logout_supported"

    public static let HttpLogoutSupported = "http_logout_supported"

    public static let GrantTypesSupported = "grant_types_supported"

    public static let IdTokenEncryptionAlgValuesSupported = "id_token_encryption_alg_values_supported"

    public static let IdTokenEncryptionEncValuesSupported = "id_token_encryption_enc_values_supported"

    public static let IdTokenSigningAlgValuesSupported = "id_token_signing_alg_values_supported"

    public static let IntrospectionEndpoint = "introspection_endpoint"

    public static let IntrospectionEndpointAuthMethodsSupported = "introspection_endpoint_auth_methods_supported"

    public static let IntrospectionEndpointAuthSigningAlgValuesSupported = "introspection_endpoint_auth_signing_alg_values_supported"

    public static let JwksUri = "jwks_uri"

    public static let Issuer = "issuer"

    public static let LogoutSessionSupported = "logout_session_supported"

    public static let MicrosoftMultiRefreshToken = "microsoft_multi_refresh_token"

    public static let OpPolicyUri = "op_policy_uri"

    public static let OpTosUri = "op_tos_uri"

    public static let RegistrationEndpoint = "registration_endpoint"

    public static let RequestObjectEncryptionAlgValuesSupported = "request_object_encryption_alg_values_supported"

    public static let RequestObjectEncryptionEncValuesSupported = "request_object_encryption_enc_values_supported"

    public static let RequestObjectSigningAlgValuesSupported = "request_object_signing_alg_values_supported"

    public static let RequestParameterSupported = "request_parameter_supported"

    public static let RequestUriParameterSupported = "request_uri_parameter_supported"

    public static let RequireRequestUriRegistration = "require_request_uri_registration"

    public static let ResponseModesSupported = "response_modes_supported"

    public static let ResponseTypesSupported = "response_types_supported"

    public static let ServiceDocumentation = "service_documentation"

    public static let ScopesSupported = "scopes_supported"

    public static let SubjectTypesSupported = "subject_types_supported"

    public static let TokenEndpoint = "token_endpoint"

    public static let TokenEndpointAuthMethodsSupported = "token_endpoint_auth_methods_supported"

    public static let TokenEndpointAuthSigningAlgValuesSupported = "token_endpoint_auth_signing_alg_values_supported"

    public static let UILocalesSupported = "ui_locales_supported"

    public static let UserInfoEndpoint = "userinfo_endpoint"

    public static let UserInfoEncryptionAlgValuesSupported = "userinfo_encryption_alg_values_supported"

    public static let UserInfoEncryptionEncValuesSupported = "userinfo_encryption_enc_values_supported"

    public static let UserInfoSigningAlgValuesSupported = "userinfo_signing_alg_values_supported"
}
